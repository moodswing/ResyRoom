@using System.Web.Script.Serialization
@using ResyRoom.Infraestructura.Extensiones
@using ResyRoom.ViewModels
@model IViewStudioViewModel

@Styles.Render("~/Content/css/loading")
@Styles.Render("~/Content/css/fullcalendar")
@Scripts.Render("~/bundles/knockoutjs")
@Scripts.Render("~/bundles/fullcalendar")
<script type="text/javascript" src="https://maps.google.com/maps/api/js?sensor=true"></script>
@Scripts.Render("~/bundles/gmap")
@Scripts.Render("~/bundles/history")

@{
    ViewBag.Title = @Model.Estudio.Nombre + " - ResyRoom";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script>
    var viewKoViewModel;
    var fecha;

    var tabsViews = new Array();
    tabsViews["Info"] = "Partial/_GeneralInfo";
    tabsViews["Salas"] = "Partial/_RoomsInfo";
    tabsViews["Equipos"] = "Partial/_EquipmentInfo";
    tabsViews["Reservas"] = "Partial/_BookingInfo";
    
    function ViewKoViewModel() {
        var self = this;
        self.TabSeleccionado = ko.observable("Reservas");
        self.SalaSeleccionada = ko.observable(@(Model.Estudio.Salas.First().IdSala));
        self.Salas = ko.observable([]);
        self.FromCalendar = ko.observable();
        self.HoraReservaDesde = ko.observable();
        self.HoraReservaHasta = ko.observable();
        self.IdSalaReserva = ko.observable();
        self.IdEstudioReserva = ko.observable();
        self.MostrarNotificacion = ko.observable();
        self.Notificaciones = ko.observable();
        
        self.FechaReserva = ko.computed(function() {
            return self.HoraReservaDesde() != null ? "<span class='booking-notice'>" + self.HoraReservaDesde().format('dddd, D [de] MMMM YYYY') + "</span>" : '--';
        });
        self.HoraDesdeHastaReserva = ko.computed(function() {
            return self.HoraReservaDesde() != null && self.HoraReservaHasta() != null ? "Desde las <span class='booking-notice'>" + self.HoraReservaDesde().format('HH:mm') + "</span> hasta las <span class='booking-notice'>" + self.HoraReservaHasta().format('HH:mm') + "</span> horas" : '--';
        });
        self.PrecioReserva = ko.computed(function() {
            if (self.IdSalaReserva() == null || self.HoraReservaHasta() == null || self.HoraReservaDesde() == null) return "";
            var sala = ko.utils.arrayFirst(viewKoViewModel.Salas(), function(item) { return item.IdSala == self.IdSalaReserva(); });
            return "$" + (self.HoraReservaHasta().diff(self.HoraReservaDesde()) / moment.duration(sala.DuracionBloque) * sala.PrecioBloque).toString().toMoney();
        });
        
        self.FechaReservaForm = ko.computed(function() { return self.HoraReservaDesde() != null ? self.HoraReservaDesde().format('YYYY-M-D 00:00:00 [PM]') : ''; });
        self.HoraDesdeForm = ko.computed(function() { return self.HoraReservaDesde() != null ? self.HoraReservaDesde().format('H:mm') : ''; });
        self.HoraHastaForm = ko.computed(function() { return self.HoraReservaHasta() != null ? self.HoraReservaHasta().format('H:mm') : ''; });
    }
    
    History.Adapter.bind(window,'statechange',function(){
        var state = History.getState();
        
        if (state.data != null && state.data.Tab != null) {
            LoadTab(state.data.Tab);
        }
    });

    function ToHourMinuteFormat(duration) {
        return moment().subtract(moment.duration(moment().format("HH:mm"))).add(duration).format("HH:mm");
    }
    
    function LoadTab(tab) {
        var view = tabsViews[tab];
        
        if (viewKoViewModel != null)
            viewKoViewModel.TabSeleccionado(tab);
            
        if (tab != "Mapa") {
            var parentWidth = $(".studio-tab").width();
            $(".studio-tab").html("<div id='loading' style='height: 300px;padding-top: 15%;'><div class='bubblingG' style='margin: auto;'><span id='bubblingG_1'>" +
                "</span><span id='bubblingG_2'></span><span id='bubblingG_3'></span></div><div style='text-align: center;'>cargando...</div></div>");
            
            $(".studio-tab").load("/Studio/LoadViewStudioTab", { idEstudio: 1, view: view }, function() {
                ko.applyBindings(viewKoViewModel, $(this).children().get(0));
                
                if ($(".equipment-boxes").length > 0)
                    $(".equipment-boxes").css("width", (parentWidth - $(".equipment-menu").width() - 25) + "px");

                if (tab == "Reservas") {
                    @foreach (var sala in @Model.Estudio.Salas)
                        {
                            <text>
                        viewKoViewModel.Salas().push(
                        { 
                            IdSala: @(sala.IdSala), 
                                    ReservasPorDia: @Html.Raw(new JavaScriptSerializer().Serialize(sala.ListadoReservasPorDía)),
                                    Reservas: ko.observable(@Html.Raw(new JavaScriptSerializer().Serialize(sala.ListadoReservas))),
                                    HoraApertura: "@(sala.HorarioActivo.HoraApertura)",
                                    HoraCierre: "@(sala.HorarioActivo.HoraCierre)",
                                    DuracionBloque: "@(sala.HorarioActivo.DuracionBloque)",
                                    PrecioBloque: "@(sala.Precio)"
                                });

                                var openDays = "@(sala.HorarioActivo.DíasAbierto)";

                        var diasCerrados = [];
                        for (var day = 0; day < 7; day++)
                        {
                            if (openDays.indexOf(day) == -1) diasCerrados.push(day);
                        }

                        var calendarSelector = $('#calendar@(sala.IdSala)');
                        var slotDuration = "@(sala.HorarioActivo.DuracionBloque)";
                        var minTime = "@(sala.HorarioActivo.HoraApertura)";
                        var maxTime = "@(sala.HorarioActivo.HoraCierre)";
                        var idSala = "@(sala.IdSala)";
                        var idEstudio = "@(sala.IdEstudio)";
                        var calendarParameters = CalendarParameters(calendarSelector, diasCerrados, slotDuration, minTime, maxTime, idSala, idEstudio, viewKoViewModel);

                        SetCalendarConfiguration(calendarParameters);
                            
                            </text>
                        }
                }
            });
        } else {
            $(".studio-tab").html("");
            displayMap("@Html.Raw(Model.Estudio.Direccion), @Html.Raw(Model.Estudio.Comuna.Descripcion), @Html.Raw(Model.Estudio.Comuna.Region.Descripcion)");   
        }
    }

    function displayMap(direccion) {
        $('.studio-map').gmap3({
            clear: true,
            map: { options: { maxZoom: 14 } },
            marker: {
                address: direccion,
                options: {
                    icon: new google.maps.MarkerImage("../../Content/img/map.png", new google.maps.Size(20, 20, "px", "px"))
                }
            }
        }, "autofit");
    }

    $(document).ready(function () {
        @if (Model.ReservaRealizadaConExito != null)
        {
            <text>
        $("#successfulBookingOverlay").show();
        $("#successfulBooking").toggle("clip");
            </text>
        }
        
        if ($(".general-profile-info ul li").length % 2 == 0) {
            $($(".general-profile-info ul li")[$(".general-profile-info ul li").length - 2]).css("border-bottom", "0");
        }

        viewKoViewModel = new ViewKoViewModel();
        ko.applyBindings(viewKoViewModel);
        LoadTab(viewKoViewModel.TabSeleccionado());

        $("[id^=BookingForm]").submit(function(e) {
            $("#loading").show();
        });
    });
</script>
@Html.Partial("_MensajeCentral")
<div class="div-table studio-search-page">
    @Html.Partial("_RankingSidebar", (BaseViewModel)Model)
    <div class="div-cell search-form">
        <div class="studio-profile-title">
            <h3>@Model.Estudio.Nombre</h3>
            <span>@Model.Estudio.Direccion, @Model.Estudio.Comuna.Descripcion, @Model.Estudio.Comuna.Region.Descripcion</span>
            <div class="studio-profile-tabs">
                <ul>
                    <li data-bind="css: { 'tab-selected': (TabSeleccionado() == 'Info') }, click: function () { History.pushState({ Tab: 'Info' }, 'Información General', null); }">Información General</li>
                    <li data-bind="css: { 'tab-selected': (TabSeleccionado() == 'Salas') }, click: function () { History.pushState({ Tab: 'Salas' }, 'Salas', null); }">Salas</li>
                    <li data-bind="css: { 'tab-selected': (TabSeleccionado() == 'Mapa') }, click: function () { History.pushState({ Tab: 'Mapa' }, 'Mapa', null); }">Mapa</li>
                    <li data-bind="css: { 'tab-selected': (TabSeleccionado() == 'Equipos') }, click: function () { History.pushState({ Tab: 'Equipos' }, 'Equipos', null); }">Equipos</li>
                    <li data-bind="css: { 'tab-selected': (TabSeleccionado() == 'Reservas') }, click: function () { History.pushState({ Tab: 'Reservas' }, 'Reservas', null); }">Reservas</li>
                </ul>
            </div>
        </div>
        <div class="studio-tab"></div>
        <div class="studio-map" style="width: 100%; height: 375px; padding-top: 15px;"  data-bind="visible: (TabSeleccionado() == 'Mapa')"></div>
    </div>
</div>
